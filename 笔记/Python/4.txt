昨天回顾
运算符：算数运算符：+  -  * //  /   %   **
	复合赋值算数运算符
	+=  -=  *=。。。
	is  ，is not 
	< <= >= ==   ！=
	not  and  or
	+   -  
函数：
	id(x)
	abs
	round
	pow
	float（x）
	complex
	int
	bool
	input
	print
运算符  数字  表达式   语句

if  语句 
	if 真值表达式1：
		语句块1
	elif 真值表达式2：
		语句块2
	.....
	else：
		....
pass 语句

布尔运算：
	not
	and
	or


######################################################################
字符串：str：
   作用：
	用来记录文字信息
   表示方法：
	在非注释中凡是用引号括起来的部分都是字符串
	''    
	""
	'''
	"""
空字符串的字面值的表示方式
	‘’
	" "
        ''''''
	"""""""
注：空字符串的布尔测试值bool（x）为False
非空字符串的字面值
‘hello’
“hello”
'''helo'''
"""hello"""
单引号和双引号的区别
	单引号内的双引号不算结束符
	双引号内的单引号不算结束符
示例：
	print（"I'm a student"）
        print('I am  "baikai")
三引号字符串
	以'''或"""开头，以'''或"""结尾的字符串
作用：三引号的字符串中的换行会zi动转换为换行符'\n'
	三引号内可以包含单引号和双引号
示例;
	welcome to beijing ,
	i like python
	i am studing
	s=‘welcome to beijing ,\n i like python \n i am studing’
	s2='''welcome to beijing ,
	i like python
	i am studing'''
隐式字符串字面值的拼接
	"I'm a student"   'I am  "baikai"’
得到的是""I'm a student"   'I am  "baikai""


用转义序列代表特殊字符
	字符串字面值中用字符反斜杠
	后跟一些字符代表特殊的一个字符
转移字符表：
	\'   代表一个单引号
	\"    代表一个双引号
	\n    换行符
	\\     反斜杠
	\r	返回光标到行首
	\t 	水平制表符
	\f     换页
	\v      垂直制表符
	\b         倒退
	\0        字符串  字符值为0
	\0oo		oo为两位8进制
	\xXX         XX为两位16进制
	\uXXXX         Unicode  16 的 16 进制的字符
	\uXXXXXXXX   Unicode 32的16进制表示






ASCII编码
查看ASCII编码表

MAN ascii

常用的ascll编码
	字符       十进制        十六进制
	' 0 '	   48              0x30
	'A'         65             0X41

序列的概念呢
	字符串就是序列
求序列的长度的函数len
len（x）返回字符串中字符的个数
raw 字符串  （原始字符串）
格式；
	
	' a '        97            0x61

	r"字符串内容"
	r'字符串内容'
	r'''字符串内容'''
 	
	r"""字符串内容"""
示例：
a="C:\newfile\test.py"
prrint (a）
b=r"C:\newfile\test.py"





print(b)
          print(len(a))       #16
          print(len(b))       #18
字符串的运算：(字符只能和字符运算，不能与数字相加)
      * *=
      +  加号运算符用于拼接字符串
      += 用于拼接运算后改变原变量的绑定关系
      x = "abcd" + "efg"
      print(x)     #abcdefg
      x +='123' 
      print(x)     #abcdefg123
      *  运算符生成重复的字符串
      x = "ABCD" *3   #  x = 'ABCDABCDABCD'
      y = 2 * "123"   #  y = '123123'
      注：字符串只能和整数想乘
      *= 生成重复的字符串并改变原变量的绑定关系
         x = '123'
         x *= 2   #    x = '123123'
         y = 3
         y *= "ABC"     #   y = 3 * "ABC" ='ABCABCABC'
练习：
     写一个程序，打印高度为4行的矩形方框
          要求，输入一个整数，此整数代表矩形的宽度。
         如：
           输入矩形的宽度：10
          打印如下：
            ##########
            #        #
            #        #
            ##########
         如：
           输入举行的宽度：5
          打印如下：
            #####
            #   #
            #   #
            #####
字符串的比较运算(先比较第一个字母，平局在比较第二个字母)
        运算符：
           < <= > >=   == !=
           实例：
             'A' < 'B'     #True
             'AB' <= 'AC'  #True
             'ABC' > 'ACB' #True
             'AD' >  'ABC' #True
             'AB' <  'ABC' #True









in/ not in 运算符
	作用：
	in 用于序列，字典，集合中，用于判断每个值是否存在于容器中，如果存在甘贵true，否则false
	说明
	not in 返回结果与in相反
	格式：对象  in  序列
	示例：
	x= 'welcome to tarena!'
	'to ' in x # t
	'e t' in  x #t
	'hello' in  x #f
	'hello ' not in x #T





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5


敲重点


aaaaaaa
aaaa
aa
a


索引index
	Python字符串是不可以改变的序列
	所有的序列都可以通过索引；爱获取其中的数据元素
语法：
	字符串[整数表达式]
说明：
	1、序列的正向索引是从0 开始的，第一个索引为1，左后一个索引为len（s）-1
	2、序列的反响索引是从-1 开始的，-1 代表最后一个，-2 代表倒数第二个以此类推，死一个是-len（s）
练习：
	
# a=str(input("请输入："))
# print(a[0])
# print(a[-1])
# if len(a)%2==1:
#     print(a[len(a)//2])
# else:
#     pass



切片slice
	从字符串序列中取出相应的元素重新组成一个字符串序列
语法：s[(开始索引b):(结束索引e)：（步长s）]
	注：小括号（）括起来的部分代表keshengl
说明：
1、切片切下的位置，0代表第一个元素，1代表第二个原素，-1 代表最后一个元素
2、结束索引是切片的终止索引（但不包括终止点）
3、步长是切片每次获取完当前元素后移动的方向和偏移量
	3.1、没有步长，相当于步长为1
	3.2、当步长为正整数时，去正向切片，开始索引默认为0，结束所因为最后一个元素的下一个位置
	3.3当步长为负数时，默认的起始位置为最后一个元素终止位置是第一个元素的前一个位置

示例:s="asdfghj"
	s[1:4]="sdf"


########################################################################################
练习：写一个程序，输入一个字符串，把字符串的第一个字符和最后一个字符去掉后，打印出处理后的字符串
2输入任意一个字符串，判断这个字符串是否是回文、







########################################################################################


Python3 中能用于字符串的函数
	len（x） 返回字符串的长度
	max（x）返回字符串串中编码至最大的字符
	min（x）返回最小值的字符
示例：s=“hello”
	len（s）  #5
	max（s）  #‘o’
	MIN(S)   #'H'


字符串编码转换函数：
	ord（c）返回一个字符c的UNICODE 的编码值
	chr（i）返回i这个值所对应的字符
示例：
print（ord（‘A’））   #65
              '中'       #20013
       chr（ '65'）       #A
##################################################################################
整数转字符串的函数‘
	bin（i） 将整数转换为二进制字符串
	oct(i)	 将整数转换为八进制字符串
	hex(i)   将整数转换为十六进制的字符串
示例：
	bin（9）   #‘0b1001’



字符串的构造（创建）函数
	str（obj=''）将对象转换为字符串







Python3 中常用的字符串方法（method）
	方法的调用语法：
		对象.方法名（方法传参）
	示例：
		‘abc’.isalpha()    #True 判断'abc'是否是字母
		123.isalpha()#  报错
	文档参见：