今日笔记：
全局变量和局部变量：
    局部变量：定义在函数内部的变量称为局部变量（函数的形参也是局部变量）
    局部变量只能在函数内部使用
    局部变量在函数调用时才能被创建，在函数调用之后会自动销毁
全局变量：
    定义在函数外部，模块内部的变量称为全局变量
    全局变量所有函数都可以直接访问（但函数内部不能将其赋值）
示例：1
说明：
	局部变量只能在其被声明的函数内部访问，而全局变量可以在整个模块范围内访问
	在函数内部赋值语句不会对全局变量造成影响


globals()/locals函数
	globals()赶回当前全局作用域内变量的字典
	locals（）返回当前局部作用内变量的字典
函数变量：
	函数名是变量，他在创建函数时绑定一个函数
	示例2
	一个函数可以作为另一个函数的实参传递

函数可以返回 另一个函数
示例见


函数嵌套定义：
	函数嵌套定义是指一个函数里用def语句来创建另一个函数的情况
示例：
def fn_outter()：
	


python3d的四个作用域
作用域也叫名字空间，是访问变量时查找变量名的范围空间
Python3 的四个作用域LEGB
作用域                            英文解释                               英文简写
局部作用域（函数内）               Loal(function)                          L
外部嵌套函数作用域                 Enclosing function locala               E
函数定义所在模块作用域             Global(module)                          G
python内置模块的作用域             Builtin(Python)                         B


变量名查找规则：
	在访问变量时，县查找本地变量，然后是包裹此函数外部的函数变量，之后是全局变量，最后是内建作用域的变量
即 L------------->E-------------->G--------------->B
	在默认情况下，变量名赋值会在骑当千作用域内创建变量和修改变量


global  语句
	作用：
	告诉解释执行器，global语句声明的一个或多个变量，这些变量的作用域为模块级的作用域，也称作全局作用域
	全局声明global 将赋值变量映射到模块文件内部的作用域
语法l:
	global  变量名1 变量名2
说明：
	全局变量如果要在函数内部被赋值免责必须经过全局声明（否则会被认为是局部变量）
	全局变量在函数内部不经过声明就可以直接访问
	不能先声明局部变量，再用global声明为全局变量，此做法部符合规则
	global变量列表里面的变量名不能出现在函数的形参列表里
nonlocal语句
作用：
	告诉解释执行器，nonlocal声明的变量不是局部变量，也不是全局变量。而是外部嵌套函数的变量
语法:
	nonlocal 变量名1  变量名2
示例：
说明：nonlocal 语句只能在被嵌套函数的内部进行使用
	对nonlocal变量进行复制操作，将对外部嵌套函数作用域内的变量进行操作
	当有两层或俩层以上函数嵌套时，访问nonlocal变量只对最近一层变量激进型操作
	nonlocal 语句的变量列表里的变量名，不能出现在此函数形参列表中


def 语句
	语法
	    def变量。。函数名（形参）


lambda  表达式
zuoyong :
	创建一个匿名函数对象
	同def雷士，但不提供函数名
语法：lambda [形参名1，形参名2，...]:表达式


语法说明：
	lambda只是一个表达式，它用来创建一个函数
	当lambda 表达式调用时，先执行冒号（：）后的表达式，并发挥表达式的结果的引用
	lambda表达式创建的函数只能包含一条表达式
        4.lambda 闭函数简单并且可以随时创建和销毁，有利于减少程序的耦合度


1 练习:
  1.  写一个lambda表达式,创建一个 函数,此函数判断参数的平方
  加1能否被5整除.如果能整除返回T rue ,否则返回False7  fx=  l ambda  n:
  print(fx(3) )  # True99  print(fx(4) )  # False

  2.  写一个lambda表达式,返两个形参的最大值L2  def mymax(X, y) :L3
  mymax =l ambdaL5  print (mymax (100  200) )  #200

eval exec 函数
eval（）函数
	作用：
		把一个字符串当成一个表达式来执行，返回表达式执行后的结果
	格式：
		eval（source，globals=None,locaala=None）
exec()函数
作用：
把一个字符串当成程序来执行
格式：
EXEC(SOURCE,GLIBALS=NONE,LOCALS=NONE)
示例：
	s='''x=100
	     y=200
	     print("x+y=",x+y)
	     del x,y
       	  '''
	exec(s)